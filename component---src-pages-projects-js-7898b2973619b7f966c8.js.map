{"version":3,"sources":["webpack:///./src/components/projects/ProjectCard.js","webpack:///./node_modules/@material-ui/core/esm/useMediaQuery/useMediaQuery.js","webpack:///./src/components/projects/ProjectPage.js","webpack:///./src/pages/projects.js"],"names":["ProjectCard","img","name","description","link","order","isBreakpoint","queryInput","options","arguments","length","undefined","theme","useTheme","props","getThemeProps","query","replace","supportMatchMedia","window","matchMedia","_props$options","_props$options$defaul","defaultMatches","_props$options$matchM","_props$options$noSsr","noSsr","_props$options$ssrMat","ssrMatchMedia","_React$useState","matches","match","setMatch","active","queryList","updateMatch","addListener","removeListener","useMediaQuery","console","log","src","Box","component","className","Container","maxWidth","style","backgroundImage","margin","Button","data-sal","data-sal-duration","Grid","container","spacing","alignItems","direction","item","xs","ProjectPage","images","useStaticQuery","projectData","projects","forEach","project","index","nodes","childImageSharp","fluid","py","map","key","Projects","Layout","SEO","title"],"mappings":"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","file":"component---src-pages-projects-js-7898b2973619b7f966c8.js","sourcesContent":["import { Box, Container, Grid } from \"@material-ui/core\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport React from \"react\";\r\n// import { useMediaQuery } from \"react-responsive\";\r\nimport Button from \"../Button\";\r\n\r\n\r\n\r\n\r\nconst ProjectCard = ({img, name, description, link, order}) => {\r\n  // console.log(order)\r\n  const isBreakpoint = useMediaQuery(`(max-width: 920px)`)\r\n\r\n  console.log(img.src)\r\n  return(\r\n    <Box component=\"div\" className=\"project-card\">\r\n      \r\n      <Container maxWidth=\"md\">\r\n        {!isBreakpoint ? (\r\n          <>\r\n            <h2 data-sal=\"slide-right\" data-sal-duration=\"1500\">{name}</h2>\r\n            <Grid container spacing={3} alignItems=\"flex-start\" direction={order % 2 === 0 ? \"row\" : \"row-reverse\"}>\r\n              <Grid item xs={6} data-sal={order % 2 === 0 ? \"slide-right\" : \"slide-left\"} data-sal-duration=\"1500\">\r\n                <Box component = \"div\" style={{ backgroundImage:`url(${img.src})`}} className=\"project-image\" />\r\n    \r\n                {/* <Img fluid={img} alt={name} style={{ width:`400px` }} /> */}\r\n              </Grid>\r\n              <Grid item xs={6} data-sal={order % 2 === 0 ? \"slide-left\" : \"slide-right\"} data-sal-duration=\"1500\">\r\n                <p className=\"over\">{description}</p>\r\n                {link ? ( <Button link={link}>Go to site</Button> ): (\"\")}\r\n                \r\n              </Grid>\r\n            </Grid>\r\n          </>\r\n          ) : \r\n          (\r\n            <>\r\n              <h2 className=\"over\">{name}</h2>\r\n              <Box component = \"div\" style={{ backgroundImage:`url(${img.src})`, margin:`0 auto` }} className=\"project-image\"  />\r\n              <p>{description}</p>\r\n              {link ? ( <Button link={link}>Go to site</Button> ): (\"\")}\r\n            </>\r\n          ) \r\n          \r\n          }\r\n        \r\n      </Container>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ProjectCard\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { getThemeProps, useTheme } from '@material-ui/styles';\nexport default function useMediaQuery(queryInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var theme = useTheme();\n  var props = getThemeProps({\n    theme: theme,\n    name: 'MuiUseMediaQuery',\n    props: {}\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['Material-UI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n\n  var query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, ''); // Wait for jsdom to support the match media feature.\n  // All the browsers Material-UI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n\n  var supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n\n  var _props$options = _extends({}, props, options),\n      _props$options$defaul = _props$options.defaultMatches,\n      defaultMatches = _props$options$defaul === void 0 ? false : _props$options$defaul,\n      _props$options$matchM = _props$options.matchMedia,\n      matchMedia = _props$options$matchM === void 0 ? supportMatchMedia ? window.matchMedia : null : _props$options$matchM,\n      _props$options$noSsr = _props$options.noSsr,\n      noSsr = _props$options$noSsr === void 0 ? false : _props$options$noSsr,\n      _props$options$ssrMat = _props$options.ssrMatchMedia,\n      ssrMatchMedia = _props$options$ssrMat === void 0 ? null : _props$options$ssrMat;\n\n  var _React$useState = React.useState(function () {\n    if (noSsr && supportMatchMedia) {\n      return matchMedia(query).matches;\n    }\n\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    } // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n\n\n    return defaultMatches;\n  }),\n      match = _React$useState[0],\n      setMatch = _React$useState[1];\n\n  React.useEffect(function () {\n    var active = true;\n\n    if (!supportMatchMedia) {\n      return undefined;\n    }\n\n    var queryList = matchMedia(query);\n\n    var updateMatch = function updateMatch() {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui-org/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n\n    updateMatch();\n    queryList.addListener(updateMatch);\n    return function () {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, matchMedia, supportMatchMedia]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query: query,\n      match: match\n    });\n  }\n\n  return match;\n}","import { Box, Container } from \"@material-ui/core\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\nimport React from \"react\";\r\nimport projects from \"../../data/projects.json\";\r\nimport ProjectCard from \"./ProjectCard\";\r\n\r\n\r\nconst ProjectPage = () => {\r\n\r\n  const images = useStaticQuery(graphql`\r\n    {\r\n      projects: allFile(filter: {relativeDirectory: {eq: \"projects\"}}, sort: {fields: name, order: ASC}) {\r\n        nodes {\r\n          name\r\n          childImageSharp{\r\n            fluid(maxWidth: 1000){\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n    \r\n  const projectData = projects;\r\n  projectData.forEach((project, index)=>{\r\n    project[\"img\"] = images.projects.nodes[index].childImageSharp.fluid;\r\n  })\r\n  console.log(projectData);\r\n\r\n  return(\r\n    <Box component=\"div\" py={8}>\r\n      <Container maxWidth=\"md\" className=\"project-page\">\r\n        <h1 data-sal=\"slide-right\" data-sal-duration=\"1000\">Projects</h1>\r\n        <Box component=\"div\" alignItems=\"center\" className=\"project-container\">\r\n          { \r\n            projectData.map(({name, description, link, img}, index) => {\r\n              return(\r\n                <ProjectCard img={img} name={name} description={description} link={link} order={index} key={index}/>\r\n              )\r\n            })\r\n          }\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ProjectPage\r\n","import React from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport SEO from \"../components/SEO\";\r\nimport ProjectPage from \"../components/projects/ProjectPage\";\r\n\r\nconst Projects = () => (\r\n  <Layout>\r\n    <SEO title=\"Projects\" />\r\n    <ProjectPage/>  \r\n  </Layout>\r\n)\r\n\r\nexport default Projects\r\n"],"sourceRoot":""}