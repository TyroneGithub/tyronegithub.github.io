{"version":3,"sources":["webpack:///./src/components/projects/ProjectCard.js","webpack:///./src/components/projects/ProjectPage.js","webpack:///./src/pages/projects.js"],"names":["ProjectCard","img","name","description","order","link","isBreakpoint","useMediaQuery","query","console","log","src","Box","component","className","Container","maxWidth","style","backgroundImage","margin","alignSelf","Button","Grid","container","spacing","alignItems","direction","item","xs","ProjectPage","images","useStaticQuery","projectData","projects","forEach","project","index","nodes","childImageSharp","fluid","py","map","Projects","Layout","SEO","title"],"mappings":"iNAgDeA,EAxCK,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,IAAKC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,YAAmBC,GAAW,EAAjBC,KAAiB,EAAXD,OAE5CE,EAAeC,wBAAc,CAACC,MAAO,uBAG3C,OADAC,QAAQC,IAAIT,EAAIU,KAEd,kBAACC,EAAA,EAAD,CAAKC,UAAU,MAAMC,UAAU,gBAE1BR,EAiBC,kBAACM,EAAA,EAAD,CAAKC,UAAY,OACf,kBAACE,EAAA,EAAD,CAAWC,SAAS,MAClB,4BAAKd,GACL,kBAACU,EAAA,EAAD,CAAKC,UAAY,MAAMI,MAAO,CAAEC,gBAAgB,OAAOjB,EAAIU,IAAZ,IAAoBQ,OAAO,UAAYL,UAAU,gBAAgBM,UAAU,WAC1H,2BAAIjB,GACJ,kBAACkB,EAAA,EAAD,qBArBJ,oCACE,4BAAKnB,GACL,kBAACoB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,aAAaC,UAAWtB,EAAQ,GAAM,EAAI,MAAQ,eACvF,kBAACkB,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GACb,kBAAChB,EAAA,EAAD,CAAKC,UAAY,MAAMI,MAAO,CAAEC,gBAAgB,OAAOjB,EAAIU,IAAZ,KAAqBG,UAAU,mBAIhF,kBAACQ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GACb,2BAAIzB,GACJ,kBAACkB,EAAA,EAAD,wB,wBCsBDQ,EA1CK,WAElB,IAAMC,EAASC,yBAAe,cAgBxBC,EAAcC,EAMpB,OALAD,EAAYE,SAAQ,SAACC,EAASC,GAC5BD,EAAO,IAAUL,EAAOG,SAASI,MAAMD,GAAOE,gBAAgBC,SAEhE9B,QAAQC,IAAIsB,GAGV,kBAACpB,EAAA,EAAD,CAAKC,UAAU,MAAM2B,GAAI,GACvB,kBAACzB,EAAA,EAAD,CAAWC,SAAS,KAAKF,UAAU,gBACjC,wCACA,kBAACF,EAAA,EAAD,CAAKC,UAAU,MAAMY,WAAW,SAASX,UAAU,qBAE/CkB,EAAYS,KAAI,WAAiCL,GAAW,IAA1ClC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,YAAaE,EAAsB,EAAtBA,KAAMJ,EAAgB,EAAhBA,IACzC,OACE,kBAAC,EAAD,CAAaA,IAAKA,EAAKC,KAAMA,EAAMC,YAAaA,EAAaE,KAAMA,EAAMD,MAAOgC,WC3BjFM,UAPE,kBACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,MAAM,aACX,kBAAC,EAAD,S","file":"component---src-pages-projects-js-655725cc1f89bb56225f.js","sourcesContent":["import { Box, Grid, Container } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Button from \"../Button\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\n\r\n\r\n\r\nconst ProjectCard = ({img, name, description, link, order}) => {\r\n  // console.log(order)\r\n  const isBreakpoint = useMediaQuery({query: '(max-width: 920px)'})\r\n\r\n  console.log(img.src)\r\n  return(\r\n    <Box component=\"div\" className=\"project-card\">\r\n      {\r\n        !isBreakpoint ? (\r\n          <>\r\n            <h2>{name}</h2>\r\n            <Grid container spacing={2} alignItems=\"flex-start\" direction={order % 2 === 0 ? \"row\" : \"row-reverse\"} >\r\n              <Grid item xs={6}>\r\n                <Box component = \"div\" style={{ backgroundImage:`url(${img.src})`}} className=\"project-image\" />\r\n\r\n                {/* <Img fluid={img} alt={name} style={{ width:`400px` }} /> */}\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <p>{description}</p>\r\n                <Button>Go to site</Button>\r\n              </Grid>\r\n            </Grid>\r\n          </>\r\n        ):\r\n        (\r\n          <Box component = \"div\">\r\n            <Container maxWidth=\"md\">\r\n              <h2>{name}</h2>\r\n              <Box component = \"div\" style={{ backgroundImage:`url(${img.src})`, margin:`0 auto` }} className=\"project-image\" alignSelf=\"center\" />\r\n              <p>{description}</p>\r\n              <Button>Go to site</Button>\r\n\r\n            </Container>\r\n          </Box>\r\n        )\r\n      }\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ProjectCard\r\n","import { Box, Container } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\nimport projects from \"../../data/projects.json\";\r\n\r\n\r\nconst ProjectPage = () => {\r\n\r\n  const images = useStaticQuery(graphql`\r\n    {\r\n      projects: allFile(filter: {relativeDirectory: {eq: \"projects\"}}, sort: {fields: name, order: ASC}) {\r\n        nodes {\r\n          name\r\n          childImageSharp{\r\n            fluid(maxWidth: 1000){\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n    \r\n  const projectData = projects;\r\n  projectData.forEach((project, index)=>{\r\n    project[\"img\"] = images.projects.nodes[index].childImageSharp.fluid;\r\n  })\r\n  console.log(projectData);\r\n\r\n  return(\r\n    <Box component=\"div\" py={8}>\r\n      <Container maxWidth=\"md\" className=\"project-page\">\r\n        <h1>Projects</h1>\r\n        <Box component=\"div\" alignItems=\"center\" className=\"project-container\">\r\n          { \r\n            projectData.map(({name, description, link, img}, index) => {\r\n              return(\r\n                <ProjectCard img={img} name={name} description={description} link={link} order={index} />\r\n              )\r\n            })\r\n          }\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ProjectPage\r\n","import React from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport SEO from \"../components/SEO\";\r\nimport ProjectPage from \"../components/projects/ProjectPage\";\r\n\r\nconst Projects = () => (\r\n  <Layout>\r\n    <SEO title=\"Projects\" />\r\n    <ProjectPage/>  \r\n  </Layout>\r\n)\r\n\r\nexport default Projects\r\n"],"sourceRoot":""}